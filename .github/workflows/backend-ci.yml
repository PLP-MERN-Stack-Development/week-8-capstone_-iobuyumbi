name: Backend CI/CD

on:
  push:
    branches: [ main ]
    paths:
      - 'server/**'
      - '.github/workflows/backend-ci.yml'
  pull_request:
    branches: [ main ]
    paths:
      - 'server/**'

jobs:
  test:
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        node-version: [18.x, 20.x]
        mongodb-version: ['7.0']
    
    services:
      mongodb:
        image: mongo:${{ matrix.mongodb-version }}
        ports:
          - 27017:27017
        options: >-
          --health-cmd "mongosh --eval 'db.runCommand(\"ping\").ok'"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
    - uses: actions/checkout@v4
    
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'pnpm'
        cache-dependency-path: server/pnpm-lock.yaml
    
    - name: Install pnpm
      uses: pnpm/action-setup@v2
      with:
        version: 8
      
    - name: Install dependencies
      run: |
        cd server
        pnpm install --frozen-lockfile
    
    - name: Run linting
      run: |
        cd server
        pnpm run lint
    
    - name: Run tests
      run: |
        cd server
        pnpm test
      env:
        MONGODB_URI: mongodb://localhost:27017/test
        JWT_SECRET: test-secret
        NODE_ENV: test
    
    - name: Upload coverage reports
      uses: codecov/codecov-action@v3
      with:
        file: server/coverage/lcov.info
        flags: backend
        name: backend-coverage

  security:
    runs-on: ubuntu-latest
    needs: test
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Run security audit
      run: |
        cd server
        pnpm audit --audit-level moderate
    
    - name: Run dependency check
      uses: dependency-check/Dependency-Check_Action@main
      with:
        project: 'Microfinance-MIS-Backend'
        path: '.'
        format: 'HTML'
        out: 'reports'
        args: >
          --scan server/
          --suppression suppression.xml

  deploy:
    runs-on: ubuntu-latest
    needs: [test, security]
    if: github.ref == 'refs/heads/main'
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Deploy to Render
      env:
        RENDER_TOKEN: ${{ secrets.RENDER_TOKEN }}
        RENDER_SERVICE_ID: ${{ secrets.RENDER_SERVICE_ID }}
      run: |
        curl -X POST "https://api.render.com/v1/services/$RENDER_SERVICE_ID/deploys" \
          -H "Authorization: Bearer $RENDER_TOKEN" \
          -H "Content-Type: application/json"
    
    - name: Notify deployment status
      if: always()
      run: |
        echo "Deployment completed for commit ${{ github.sha }}"
        echo "View deployment at: https://microfinance-mis.onrender.com" 